import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, e as element, t as text, a as space, c as claim_element, b as children, f as claim_text, g as detach_dev, h as claim_space, l as add_location, j as attr_dev, m as insert_dev, o as append_dev, n as noop, q as create_component, D as query_selector_all, r as claim_component, u as mount_component, x as transition_in, y as transition_out, z as destroy_component } from './index.c0d91291.js';

/* src/components/About/About.svelte generated by Svelte v3.18.0 */

const file = "src/components/About/About.svelte";

function create_fragment(ctx) {
	let div3;
	let div0;
	let h2;
	let t0;
	let t1;
	let div1;
	let img;
	let img_src_value;
	let t2;
	let div2;
	let p;
	let t3;

	const block = {
		c: function create() {
			div3 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text("About Name");
			t1 = space();
			div1 = element("div");
			img = element("img");
			t2 = space();
			div2 = element("div");
			p = element("p");
			t3 = text("Insert some text here");
			this.h();
		},
		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "About Name");
			h2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div3_nodes);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			img = claim_element(div1_nodes, "IMG", { src: true, alt: true });
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			p = claim_element(div2_nodes, "P", {});
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "Insert some text here");
			p_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file, 9, 8, 153);
			attr_dev(div0, "class", "About-Title");
			add_location(div0, file, 8, 4, 119);
			if (img.src !== (img_src_value = "")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "");
			add_location(img, file, 12, 8, 224);
			attr_dev(div1, "class", "About-Picture");
			add_location(div1, file, 11, 4, 188);
			add_location(p, file, 15, 8, 293);
			attr_dev(div2, "class", "About-Text");
			add_location(div2, file, 14, 4, 260);
			attr_dev(div3, "class", "About");
			add_location(div3, file, 7, 0, 95);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div0);
			append_dev(div0, h2);
			append_dev(h2, t0);
			append_dev(div3, t1);
			append_dev(div3, div1);
			append_dev(div1, img);
			append_dev(div3, t2);
			append_dev(div3, div2);
			append_dev(div2, p);
			append_dev(p, t3);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

/* src/routes/about.svelte generated by Svelte v3.18.0 */

function create_fragment$1(ctx) {
	let t;
	let current;
	const about = new About({ $$inline: true });

	const block = {
		c: function create() {
			t = space();
			create_component(about.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1ine71f\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			claim_component(about.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			mount_component(about, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(about.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(about.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			destroy_component(about, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class About_1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About_1",
			options,
			id: create_fragment$1.name
		});
	}
}

export default About_1;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuODM2MTU0MjAuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
